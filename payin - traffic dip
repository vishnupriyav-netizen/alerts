with top_combinations as (
select
charge_currency,
provider,
payment_method_name,
countDistinct(case when payment_attempt_id is not null then payin_id end) as total_attempts
from payin
where payin_created_at >= now() - interval 10 day
group by charge_currency, provider, payment_method_name
order by total_attempts desc
limit 10
),
historical_traffic as (
select
a.charge_currency,
a.provider,
a.payment_method_name,
toDate(b.payin_created_at) as date,
toHour(b.payin_created_at) as hour,
intDiv(toMinute(b.payin_created_at), 30) as half_hour,
countDistinct(case when b.payment_attempt_id is not null then b.payin_id end) as attempts
from top_combinations a
left join payin b on (
a.charge_currency = b.charge_currency
and a.provider = b.provider
and a.payment_method_name = b.payment_method_name
and b.payin_created_at >= now() - interval 10 day)
-- and b.payin_created_at < now() - interval 20 minute
group by a.charge_currency, a.provider, a.payment_method_name, date, hour, half_hour
),

stats as (
select
charge_currency,provider,
payment_method_name,hour,half_hour,
quantile(0.5)(attempts) as median_attempts,
stddevPop(attempts) as std_dev_attempts
from historical_traffic
where date >= toDate(now()) - 7
and date < toDate(now())                 
-- and hour = toHour(now())    
and hour = toHour(now() - interval 60 minute) 
and half_hour = intDiv(toMinute(now()), 30)  
-- and half_hour = (select if(countIf(half_hour = 1) > 0, 1, 0))
group by charge_currency, provider, payment_method_name, hour, half_hour
),

-- select * from stats

today as (
select
charge_currency,
provider,
payment_method_name,
hour,
half_hour,
attempts as current_attempts
from historical_traffic
where date = toDate(now())
and hour = toHour(now() - interval 60 minute) 
and half_hour = intDiv(toMinute(now()), 30)  
)
,

-- select toDate(now())
-- select toHour(now())
-- select intDiv(toMinute(now()), 30) 
-- tested on 3:30 to 4:00 at 4:00 to 4:30
-- to test on 4:0 to 4:30 at 4:30 to 5 i.e hr - 4, halh housr - 0 
final as (

select
t.charge_currency,t.provider,t.payment_method_name,
t.hour as hour_utc
,t.half_hour as half_hour_utc,
toHour(toTimeZone(now() - interval 60 minute, 'Asia/Kolkata')) as hour_ist,
t.current_attempts,s.median_attempts,s.std_dev_attempts,

(s.median_attempts - t.current_attempts) as traffic_diff_now, (2 * s.std_dev_attempts) as threshold,

case when (s.median_attempts - t.current_attempts) > (1.5 * s.std_dev_attempts) then 'alert' else null end as status
from today t join stats s on t.charge_currency = s.charge_currency
and t.provider = s.provider and t.payment_method_name = s.payment_method_name and t.hour = s.hour
and t.half_hour = s.half_hour)

select * from final where status is not null;







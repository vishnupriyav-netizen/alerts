-- collect p0 - backtesting

with top as (
select provider, charge_currency,
countDistinct(payin_id) as collect_traffic 
from payin where toDate(payin_created_at) >= toDate(now()) - interval 30 day and substr(payin_id, 1,3) = 'col'
group by 1,2
having collect_traffic > 10
order by collect_traffic desc  
),

date_range as (
  select toDate(now()) - interval number day as date
  from numbers(40)
),

hour_range as (
  select concat(toString(number * 2), '-', toString(number * 2 + 2)) as hour
  from numbers(12)
),

all_combinations as (
  select t.provider, t.charge_currency, d.date, h.hour
  from top t
  cross join date_range d
  cross join hour_range h
),


historics as (
select a.provider as provider, a.charge_currency as charge_currency , 
toDate(b.payin_created_at) as date, 
concat(toString(intDiv(toHour(b.payin_created_at), 2) * 2), '-', toString(intDiv(toHour(b.payin_created_at), 2) * 2 + 2)) as hour,
countDistinct(payin_id) as collect_traffic 
from top a 
left join payin b 
on a.provider = b.provider and a.charge_currency = b.charge_currency
where toDate(b.payin_created_at) >= toDate(now()) - interval 40 day  and 
substr(b.payin_id, 1,3) = 'col'
group by 1,2,3,4
)
,

complete_data as (
  select 
    ac.provider as provider,
    ac.charge_currency  as charge_currency,
    ac.date as date,
    ac.hour as hour,
    coalesce(h.collect_traffic, 0) as collect_traffic
  from all_combinations ac
  left join historics h 
  on ac.provider = h.provider 
  and ac.charge_currency = h.charge_currency 
  and ac.date = h.date 
  and ac.hour = h.hour
),



daily_moving_stats as (
select
  provider,
  charge_currency,
  date,
  hour,
  collect_traffic,

  quantile(0.25) (collect_traffic) OVER (
    PARTITION BY provider, charge_currency, hour
    ORDER BY date
    ROWS BETWEEN 20 PRECEDING AND 1 PRECEDING
  ) as q1_collect_traffic, 
  
 count(collect_traffic) OVER (
    PARTITION BY provider, charge_currency, hour
    ORDER BY date
    ROWS BETWEEN 20 PRECEDING AND 1 PRECEDING
) as historical_data_points_count,

groupArray(collect_traffic) OVER (
    PARTITION BY provider, charge_currency, hour
    ORDER BY date
    ROWS BETWEEN 20 PRECEDING AND 1 PRECEDING
) as historical_datapoints,

groupArray(date) OVER (
    PARTITION BY provider, charge_currency, hour
    ORDER BY date
    ROWS BETWEEN 20 PRECEDING AND 1 PRECEDING
) as historical_dates
  

from complete_data
)



select *
from daily_moving_stats
-- where date >= toDate(now()) - interval 10 day 
-- where date = toDate(now()) and hour = '4-6'
where date >= '2025-09-03' 
-- You can filter this to show the most recent day's stats
order by provider, charge_currency, hour;
